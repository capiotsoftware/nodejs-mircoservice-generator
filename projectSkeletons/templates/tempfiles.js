function gitIgnore(){
    return `
# IDE files
.idea

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# Commenting this out is preferred by some people, see
# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git
node_modules

# Users Environment Variables
.lock-wscript

# Runtime configuration for swagger app
config/runtime.yaml
`;
}

function esLint(){
    return  `
env:
  es6: true
  node: true
extends: 'eslint:recommended'
rules:
  indent:
    - error
    - 4
  linebreak-style:
    - error
    - unix
  quotes:
    - error
    - double
  semi:
    - error
    - always
`;
}

function config(){
    return `
# swagger configuration file

# values in the swagger hash are system configuration for swagger-node
swagger:

  fittingsDirs: [ api/fittings ]
  defaultPipe: null
  swaggerControllerPipe: swagger_controllers  # defines the standard processing pipe for controllers

  # values defined in the bagpipes key are the bagpipes pipes and fittings definitions
  # (see https://github.com/apigee-127/bagpipes)
  bagpipes:

    _router:
      name: swagger_router
      mockMode: false
      mockControllersDirs: [ api/mocks ]
      controllersDirs: [ api/controllers ]

    _swagger_validate:
      name: swagger_validator
      validateResponse: false

    # pipe for all swagger-node controllers
    swagger_controllers:
      - onError: json_error_handler
      - cors
      - swagger_security
      - _swagger_validate
      - express_compatibility
      - _router

    # pipe to serve swagger (endpoint is in swagger.yaml)
    swagger_raw:
      name: swagger_raw

# any other values in this file are just loaded into the config for application access...
`;
}

function packageJson(config){
    return `{
    "name": "${config.projectName}",
    "version": "1.0.0",
    "description": "",
    "main": "app.js",
    "scripts": {
    "start": "node app.js",
        "test": "swagger project test"
    },
    "keywords": [],
    "author": "codeGenerator",
    "license": "ISC",
    "dependencies": {
        "bluebird": "^3.5.0",
        "cuti": "git+https://github.com/capiotsoftware/cuti.git",
        "express": "^4.15.2",
        "log4js": "^1.1.1",
        "mongoose": "^4.9.9",
        "puttu-redis": "git+https://github.com/capiotsoftware/puttu-redis.git",
        "swagger-express-mw": "^0.1.0",
        "swagger-sequelize-crud": "git+https://bitbucket.org/capiot/swagger-sequelize-crud.git",
        "sequelize": "^4.11.5",
        "pg": "^7.3.0"
    }
}
`;
}

module.exports = {
    gitIgnore :gitIgnore,
    esLint: esLint,
    config:config,
    packageJson:packageJson
};
